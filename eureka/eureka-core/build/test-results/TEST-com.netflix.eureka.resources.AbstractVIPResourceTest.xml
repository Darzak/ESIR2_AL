<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.netflix.eureka.resources.AbstractVIPResourceTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2017-04-09T17:29:25" hostname="pc54.home" time="2.446">
  <properties/>
  <testcase name="testMiniVipGet" classname="com.netflix.eureka.resources.AbstractVIPResourceTest" time="2.198"/>
  <testcase name="testFullVipGet" classname="com.netflix.eureka.resources.AbstractVIPResourceTest" time="0.248"/>
  <system-out><![CDATA[Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758965286,"lastDirtyTimestamp":1491758965286,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758965286,"lastDirtyTimestamp":1491758965286,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758967386,"lastDirtyTimestamp":1491758967386,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758967386,"lastDirtyTimestamp":1491758967386,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
]]></system-out>
  <system-err><![CDATA[SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/polivier/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-simple/1.7.10/5b0027a74461a877acb12602ac141da9161304dd/slf4j-simple-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/polivier/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.1.2/b316e9737eea25e9ddd6d88eaeee76878045c6b2/logback-classic-1.1.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
[Test worker] WARN com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[Test worker] INFO com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[Test worker] INFO com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@816e11e
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - Logging to org.slf4j.impl.SimpleLogger(org.mortbay.log) via org.mortbay.log.Slf4jLog
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:45316
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758967075 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45316/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000003 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000000 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000005 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000002 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000004 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000001 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:37973
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758967505 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:37973/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000002 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000004 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000000 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000003 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000005 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance APPLICATION0/i-00000001 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
]]></system-err>
</testsuite>
