<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.netflix.eureka.registry.InstanceRegistryTest" tests="11" skipped="0" failures="0" errors="0" timestamp="2017-04-09T17:28:59" hostname="pc54.home" time="20.523">
  <properties/>
  <testcase name="testStatusOverrideWithExistingLeaseUp" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="1.932"/>
  <testcase name="testGetAppsDeltaFromAllRemoteRegions" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="8.388"/>
  <testcase name="testStatusOverrideWithExistingLeaseOutOfService" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.45"/>
  <testcase name="testGetAppsFromBothRegions" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.231"/>
  <testcase name="testStatusOverrideStartingStatus" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.245"/>
  <testcase name="testStatusOverrideSetAndRemoval" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.262"/>
  <testcase name="testGetAppsFromLocalRegionOnly" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.162"/>
  <testcase name="testAppsHashCodeAfterRefresh" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="8.286"/>
  <testcase name="testGetAppsFromAllRemoteRegions" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.166"/>
  <testcase name="testSoftDepRemoteUp" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.259"/>
  <testcase name="testEvictionTaskCompensationTime" classname="com.netflix.eureka.registry.InstanceRegistryTest" time="0.137"/>
  <system-out><![CDATA[Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758940051,"lastDirtyTimestamp":1491758940051,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758940051,"lastDirtyTimestamp":1491758940051,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758941918,"lastDirtyTimestamp":1491758941918,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758941918,"lastDirtyTimestamp":1491758941918,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Sleeping up to 35 seconds to let the remote registry fetch delta.
Eureka resource mock, received request on path: /eureka/v2/apps/delta. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/delta with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758941918,"lastDirtyTimestamp":1491758941918,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950307,"lastDirtyTimestamp":1491758950307,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950307,"lastDirtyTimestamp":1491758950307,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950757,"lastDirtyTimestamp":1491758950757,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950757,"lastDirtyTimestamp":1491758950757,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950989,"lastDirtyTimestamp":1491758950989,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758950989,"lastDirtyTimestamp":1491758950989,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951235,"lastDirtyTimestamp":1491758951235,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951235,"lastDirtyTimestamp":1491758951235,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951497,"lastDirtyTimestamp":1491758951497,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951497,"lastDirtyTimestamp":1491758951497,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951659,"lastDirtyTimestamp":1491758951659,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951659,"lastDirtyTimestamp":1491758951659,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Sleeping up to 35 seconds to let the remote registry fetch delta.
Eureka resource mock, received request on path: /eureka/v2/apps/delta. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/delta with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758951659,"lastDirtyTimestamp":1491758951659,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Canceling application: MYLOCAPP from local registry.
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758959945,"lastDirtyTimestamp":1491758959945,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758959945,"lastDirtyTimestamp":1491758959945,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758960111,"lastDirtyTimestamp":1491758960111,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758960111,"lastDirtyTimestamp":1491758960111,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Created eureka server mock with applications map { name : MYAPP , instance count: 1 } and applications delta map { name : MYAPP , instance count: 1 }
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758960371,"lastDirtyTimestamp":1491758960371,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
Eureka resource mock, received request on path: /eureka/v2/apps/. HTTP method: |GET|
Eureka resource mock, sent response for request path: /eureka/v2/apps/ with content{"applications":{"application":[{"name":"MYAPP","instance":[{"app":"MYAPP","ipAddr":"10.10.101.1","sid":"na","countryId":1,"dataCenterInfo":{"@class":"com.netflix.appinfo.AmazonInfo","name":"Amazon","metadata":{"public-ipv4":"XXX","public-hostname":"blah","instance-id":"blah","local-ipv4":"XXX","instance-type":"XXX","ami-id":"XXX","availability-zone":"us-east-1c"}},"hostName":"blah","status":"UP","leaseInfo":{"renewalIntervalInSecs":30,"durationInSecs":90,"registrationTimestamp":0,"lastRenewalTimestamp":0,"evictionTimestamp":0,"serviceUpTimestamp":0},"isCoordinatingDiscoveryServer":false,"lastUpdatedTimestamp":1491758960371,"lastDirtyTimestamp":1491758960371,"overriddenStatus":"UNKNOWN","port":{"$":7001,"@enabled":"true"},"securePort":{"$":7002,"@enabled":"false"},"metadata":{"@class":"java.util.Collections$EmptyMap"}}]}],"versions__delta":"-1","apps__hashcode":"UP_1_"}}
]]></system-out>
  <system-err><![CDATA[SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/polivier/.gradle/caches/modules-2/files-2.1/org.slf4j/slf4j-simple/1.7.10/5b0027a74461a877acb12602ac141da9161304dd/slf4j-simple-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/polivier/.gradle/caches/modules-2/files-2.1/ch.qos.logback/logback-classic/1.1.2/b316e9737eea25e9ddd6d88eaeee76878045c6b2/logback-classic-1.1.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
[Test worker] WARN com.netflix.config.sources.URLConfigurationSource - No URLs will be polled as dynamic configuration sources.
[Test worker] INFO com.netflix.config.sources.URLConfigurationSource - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[Test worker] INFO com.netflix.config.DynamicPropertyFactory - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@816e11e
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - Logging to org.slf4j.impl.SimpleLogger(org.mortbay.log) via org.mortbay.log.Slf4jLog
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:44844
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758941624 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:43979
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758942059 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc2 with status UP (replication=false)
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : true
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : false
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-16-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : true
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:46639
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758950506 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:46639/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status OUT_OF_SERVICE (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status OUT_OF_SERVICE (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status OUT_OF_SERVICE (replication=false)
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:45803
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758950870 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45803/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYAPP/blahloc2 with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:38425
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758951099 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:38425/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Storing overridden status OUT_OF_SERVICE from map
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status STARTING (replication=false)
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:45069
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758951320 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45069/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Storing overridden status OUT_OF_SERVICE from map
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status OUT_OF_SERVICE (replication=false)
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:33793
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758951583 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:33793/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc with status UP (replication=false)
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:40097
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758951758 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:40097/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Registered instance MYLOCAPP/blahloc2 with status UP (replication=false)
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : true
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : false
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-16-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : true
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:43979/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-16-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-16-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : false
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:43979/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-16-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-24-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:46639/eureka/v2/ , delta : true
[pool-24-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:46639/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-24-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-24-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-24-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:46639/eureka/v2/ , delta : false
[pool-24-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:46639/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-24-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-24-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-32-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45803/eureka/v2/ , delta : true
[pool-32-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:45803/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-32-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-32-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-32-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45803/eureka/v2/ , delta : false
[pool-32-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:45803/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-32-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-32-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-40-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:38425/eureka/v2/ , delta : true
[pool-40-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:38425/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-40-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-40-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-40-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:38425/eureka/v2/ , delta : false
[pool-40-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:38425/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-40-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-40-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-48-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45069/eureka/v2/ , delta : true
[pool-48-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:45069/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-48-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-48-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-48-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:45069/eureka/v2/ , delta : false
[pool-48-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:45069/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-48-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-48-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-56-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:33793/eureka/v2/ , delta : true
[pool-56-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:33793/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-56-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-56-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-56-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:33793/eureka/v2/ , delta : false
[pool-56-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:33793/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-56-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-56-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-64-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:40097/eureka/v2/ , delta : true
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : true
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-8-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:44844/eureka/v2/ , delta : false
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:44844/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-8-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-8-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[pool-16-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : true
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:43979/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:244)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 16 more
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The delta is null for some reason. Not storing this information
[pool-16-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - The server does not allow the delta revision to be applied because it is not safe. Hence got the full registry.
[pool-16-thread-1] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43979/eureka/v2/ , delta : false
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - Can't get a response from http://localhost:43979/eureka/v2/
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connexion refusée (Connection refused)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRemoteRegistry(RemoteRegionRegistry.java:389)
	at com.netflix.eureka.registry.RemoteRegionRegistry.storeFullRegistry(RemoteRegionRegistry.java:349)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchAndStoreDelta(RemoteRegionRegistry.java:258)
	at com.netflix.eureka.registry.RemoteRegionRegistry.fetchRegistry(RemoteRegionRegistry.java:228)
	at com.netflix.eureka.registry.RemoteRegionRegistry.access$000(RemoteRegionRegistry.java:70)
	at com.netflix.eureka.registry.RemoteRegionRegistry$1.run(RemoteRegionRegistry.java:167)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connexion refusée (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:120)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:179)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:612)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:447)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:884)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:117)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 17 more
[pool-16-thread-1] ERROR com.netflix.eureka.registry.RemoteRegionRegistry - The application is null for some reason. Not storing this information
[pool-16-thread-1] WARN com.netflix.eureka.registry.RemoteRegionRegistry - Failed to fetch remote registry. This means this eureka server is not ready for serving traffic.
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] WARN com.netflix.eureka.registry.AbstractInstanceRegistry - DS: Registry: cancel failed because Lease is not registered for: MYLOCAPP/MYLOCAPP
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:43716
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758960038 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43716/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Application MYAPP  fetched from the remote region us-east-1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:43814
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758960192 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43814/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO org.mortbay.log - jetty-6.1H.22
[Test worker] INFO org.mortbay.log - Started SocketConnector@0.0.0.0:43591
[Test worker] WARN com.netflix.eureka.DefaultEurekaServerConfig - Cannot find the properties specified : eureka-server. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] WARN com.netflix.discovery.internal.util.Archaius1Utils - Cannot find the properties specified : eureka-client. This may be okay if there are other environment specific properties or the configuration is installed with a different mechanism.
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Disable delta property : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Force full registry fetch : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application is null : false
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Application version is -1: true
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
[Test worker] INFO com.netflix.discovery.DiscoveryClient - The response status is 200
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
[Test worker] INFO com.netflix.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
[Test worker] INFO com.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1491758960430 with initial instances count: 1
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initializing ...
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON encoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using JSON decoding codec LegacyJacksonJson
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML encoding codec XStreamXml
[Test worker] INFO com.netflix.discovery.provider.DiscoveryJerseyProvider - Using XML decoding codec XStreamXml
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Disable delta property : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Application is null : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Registered Applications size is zero : true
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Getting instance registry info from the eureka server : http://localhost:43591/eureka/v2/ , delta : false
[Test worker] INFO com.netflix.eureka.registry.RemoteRegionRegistry - Successfully updated registry with the latest content
[Test worker] INFO com.netflix.eureka.registry.AbstractInstanceRegistry - Finished initializing remote region registries. All known remote regions: [us-east-1]
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Initialized
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shutting down ...
[Test worker] INFO com.netflix.eureka.DefaultEurekaServerContext - Shut down
]]></system-err>
</testsuite>
